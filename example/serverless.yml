service: hello-world

plugins:
  # - serverless-microstrate
  # during dev
  - ../

package:
  individually: true

custom:
  apiPrefix: apiv2

provider:
  name: microstrate
  region: eu-west-2
  runtime: nodejs20.x
  architecture: arm64
  stage: prod
  memorySize: 1024
  timeout: 60
  environment:
    SERVICE: ${self:service}

resources:
  Description: ${self:service} service stack
  Resources:
    DataStore:
      type: microstrate::kv::bucket
      deletionPolicy: retain
      properties:
        name: DataStore
        description: Table for storing records
        indexing:
          mappings:
            - field: PK
              fieldType: text
            - field: SK
              fieldType: text
            - field: subject
              fieldType: text
            - field: topic
              fieldType: tex

    DataBucket:
      type: microstrate::objectstore::bucket
      deletionPolicy: retain
      properties:
        name: DataBucket
        description: Bucket for storing files
        metadata:
          a: b
          c: d

    DataStream:
      type: microstrate::stream
      deletionPolicy: retain
      properties:
        name: DataStream
        description: stream for storing events
        subjects:
          - ONE.>
          - TWO.>
        maxConsumers: 10
        maxMsgs: 1000
        storage: file
        discardNewPerSubject: false
        maxMsgsPerSubject: 100
        maxMsgSize: 1024
        numReplicas: 2
        metadata:
          a: b
          c: d

    DataGateway:
      type: microstrate::gateway
      deletionPolicy: retain
      properties:
        name: DataGateway
        description: gateway for serving events
        limit:
          request: 100
          time: 100
        metadata:
          a: b
          c: d

functions:
  hello:
    handler: handler.hello
    description: hello desc
    memorySize: 128
    timeout: 3
    environment:
      APP_ENV_VARIABLE: FOOBAR
    events:
      - http:
          path: ${self:custom.apiPrefix}/hello
          method: 'post'
          cors:
            origins:
              - '*'

  world:
    handler: handler.hello
    description: world desc
    tags:
      foo: bar

  helloWorld:
    handler: handler.hello
    events:
      - httpApi: 'POST /hello'
      - httpApi: 'PUT /hello'
      - httpApi: 'DELETE /hello'
      - httpApi:
          method: GET
          path: /hello
